{"ast":null,"code":"import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { DateTime } from \"luxon\";\nconst useRecibir = e => {\n  e.preventDefault();\n  let historial = {};\n  let total = 0;\n  let metros = parseInt(e.target.ingreso.value);\n  let propiedad = e.target.propiedad.value;\n  let zona = e.target.zona.value;\n  let PrecioMetro = 50;\n  if (metros < 40) {\n    toast.error('Tiene que tener un minímo de 40 metros cuadrado');\n  }\n  if (metros > 400) {\n    toast.error(\"No podemos agregar más de 400 metros cuadrado\");\n  }\n  if (isNaN(metros) === true) {\n    toast.error(\"Ingrese un número\");\n  }\n  let precioZonaNorte = 0;\n  let precioZonaSur = 0;\n  let precioZonaEsteOeste = 0;\n  if (zona === \"zona norte\" || zona === \"zona centro\" || zona === \"barrio privado\") {\n    precioZonaNorte = precioZonaNorte + 200;\n  }\n  if (zona === \"zona sur\" || zona === \"subirbio\") {\n    precioZonaSur = precioZonaSur + 100;\n  }\n  if (zona == \"zona este\" || zona === \"zona oeste\" || zona === \"zona rural\" || zona === \"zona industrial\") {\n    precioZonaEsteOeste = precioZonaEsteOeste + 130;\n  }\n  let casa = 0;\n  let Propiedadlujo = 0;\n  let edificio = 0;\n  if (propiedad == \"penthouse\" || propiedad === \"loft\" || propiedad === \"casaquinta\") {\n    Propiedadlujo = Propiedadlujo + 7000;\n  }\n  if (propiedad === \"edificio\" || propiedad === \"triplex\" || propiedad === \"duplex\") {\n    edificio = edificio + 5500;\n  }\n  if (propiedad === \"monoambiente\" || propiedad === \"casa de dos ambientes\" || propiedad === \"casa de tres ambientes\") {\n    casa = casa + 3800;\n  }\n  let totalPrecioMetro = PrecioMetro * metros;\n  if (metros > 40 && metros < 401 && isNaN(metros) === false && propiedad !== \"\" && zona !== \"\") {\n    total = total + totalPrecioMetro + precioZonaEsteOeste + precioZonaNorte + precioZonaSur + edificio + Propiedadlujo + casa;\n    let fecha = DateTime.now().toLocaleString();\n    let hora = DateTime.now().toLocaleString(DateTime.TIME_24_SIMPLE);\n    let id = Math.trunc(Math.random() * 1000);\n    historial = {\n      'id': id,\n      'fecha': fecha + ' ' + hora,\n      'propiedad': propiedad,\n      'ubicacion': zona,\n      'metrosCuadrados': metros,\n      'poliza': total\n    };\n    const local = JSON.parse(localStorage.getItem(\"datos\")) || [];\n    local.push(historial);\n    localStorage.setItem(\"datos\", JSON.stringify(local));\n    toast.success(\"Cotización realizada\");\n    document.querySelector(\".precio\").innerHTML = `Precio estimado $${total}`;\n  }\n};\nexport default useRecibir;","map":{"version":3,"names":["toast","DateTime","useRecibir","e","preventDefault","historial","total","metros","parseInt","target","ingreso","value","propiedad","zona","PrecioMetro","error","isNaN","precioZonaNorte","precioZonaSur","precioZonaEsteOeste","casa","Propiedadlujo","edificio","totalPrecioMetro","fecha","now","toLocaleString","hora","TIME_24_SIMPLE","id","Math","trunc","random","local","JSON","parse","localStorage","getItem","push","setItem","stringify","success","document","querySelector","innerHTML"],"sources":["/Users/gabrielgarofalo/Downloads/Aseguradora-main 2/src/components/useRecibir.jsx"],"sourcesContent":["import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { DateTime } from \"luxon\";\n\nconst useRecibir = (e) => {\n    e.preventDefault();\n\n    let historial = {}\n    let total = 0; let metros = parseInt(e.target.ingreso.value);\n    let propiedad = e.target.propiedad.value; let zona = e.target.zona.value;\n\n    let PrecioMetro = 50;\n\n    if (metros < 40) {\n        toast.error('Tiene que tener un minímo de 40 metros cuadrado');\n    } if (metros > 400) {\n        toast.error(\"No podemos agregar más de 400 metros cuadrado\")\n    } if (isNaN(metros) === true) {\n        toast.error(\"Ingrese un número\");\n    }\n\n    let precioZonaNorte = 0; let precioZonaSur = 0; let precioZonaEsteOeste = 0;\n\n    if (zona === \"zona norte\" || zona === \"zona centro\" || zona === \"barrio privado\") {\n        precioZonaNorte = precioZonaNorte + 200;\n    } if (zona === \"zona sur\" || zona === \"subirbio\") {\n        precioZonaSur = precioZonaSur + 100;\n    } if (zona == \"zona este\" || zona === \"zona oeste\" || zona === \"zona rural\" || zona === \"zona industrial\") {\n        precioZonaEsteOeste = precioZonaEsteOeste + 130;\n    }\n\n\n    let casa = 0; let Propiedadlujo = 0; let edificio = 0;\n\n    if (propiedad == \"penthouse\" || propiedad === \"loft\" || propiedad === \"casaquinta\") {\n        Propiedadlujo = Propiedadlujo + 7000;\n    }\n    if (propiedad === \"edificio\" || propiedad === \"triplex\" || propiedad === \"duplex\") {\n        edificio = edificio + 5500;\n    } if (propiedad === \"monoambiente\" || propiedad === \"casa de dos ambientes\" || propiedad === \"casa de tres ambientes\") {\n        casa = casa + 3800;\n    }\n\n    let totalPrecioMetro = PrecioMetro * metros;\n\n    if ((metros > 40 && metros < 401) && isNaN(metros) === false && propiedad !== \"\" && zona !== \"\") {\n        total = total + totalPrecioMetro + precioZonaEsteOeste +\n            precioZonaNorte + precioZonaSur + edificio + Propiedadlujo + casa;\n        \n        let fecha = DateTime.now().toLocaleString(); let hora = DateTime.now().toLocaleString(DateTime.TIME_24_SIMPLE);\n\n        let id = Math.trunc(Math.random() * 1000);\n        historial = {\n            'id': id,\n            'fecha': fecha + ' ' + hora,\n            'propiedad': propiedad,\n            'ubicacion': zona,\n            'metrosCuadrados': metros,\n            'poliza': total\n        }\n        const local = JSON.parse(localStorage.getItem(\"datos\")) || [];\n        local.push(historial);\n        localStorage.setItem(\"datos\", JSON.stringify(local));\n        toast.success(\"Cotización realizada\");\n\n        document.querySelector(\".precio\").innerHTML=`Precio estimado $${total}`;\n    }\n}\nexport default useRecibir;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}